name: Release

on:
  push:
    branches:
      - main

concurrency: ${{ github.workflow }}-${{ github.ref }}

env:
  CI: true

jobs:
  version:
    name: Version and Publish
    timeout-minutes: 15
    runs-on: ubuntu-latest

    outputs:
      published: ${{ steps.changesets.outputs.published }}

    steps:
      - name: Checkout Repository
        uses: actions/checkout@v3
        with:
          fetch-depth: 0

      - name: Setup Node
        uses: actions/setup-node@v3
        with:
          node-version: 20

      - name: Install Dependencies
        run: npm ci

      - name: Create Release Pull Request or Publish to npm
        id: changesets
        uses: changesets/action@v1
        with:
          title: "chore: release"
          commit: "chore: release"
          publish: npm run release
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
          NPM_TOKEN: ${{ secrets.FORGE_NPM_TOKEN }}

      - name: Check File Changes
        id: changes
        uses: dorny/paths-filter@v3
        with:
          filters: |
            svg:
              - 'svg/**'

      - name: Package CDN Assets
        if: steps.changes.outputs.svg == 'true' && steps.changesets.outputs.published == 'true'
        id: package-assets
        run: npm run package-assets

      - name: Upload Assets for Deploy
        uses: actions/upload-artifact@v4
        if: steps.package-assets.outcome == 'success'
        with:
          name: deployment-assets
          path: dist/deployment-assets.tar.gz
          if-no-files-found: error
          retention-days: 1

  publish-cdn:
    name: Publish Assets to CDN
    needs: version
    uses: tyler-technologies-oss/forge-automation-shared/.github/workflows/wf-publish-cloudfront-assets.yml@v2.10.3
    if: needs.version.outputs.published == 'true'
    with:
      ARTIFACT_NAME: "deployment-assets"
      AWS_REGION: "us-east-1"
      MAX_CLOUDFRONT_INVALIDATIONS: 25
    secrets:
      AWS_IAM_ROLE: ${{ secrets.AWS_IAM_ROLE }}
      AWS_S3_BUCKET_NAME: ${{ secrets.AWS_S3_BUCKET }}
      AWS_CLOUDFRONT_DISTRIBUTION_ID: ${{ secrets.AWS_CLOUDFRONT_DISTRIBUTION }}